# true posterior
curve(dnorm(x, mu_star, sd_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#posterior mean
mu_star <- ((1/tau2)*mu+(n/sigma2)*mean(y))/( (1/tau2)+(n/sigma2))
#posterior standard deviation
sd_star <- sqrt(1/( (1/tau2)+(n/sigma2)))
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = lambda_sample), col = "black", add = T)
# true posterior
curve(dnbinom(x, mu = 4, prob = 1/(1+2)), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#posterior mean
mu_star <- ((1/tau2)*mu+(n/sigma2)*mean(y))/( (1/tau2)+(n/sigma2))
#posterior standard deviation
sd_star <- sqrt(1/( (1/tau2)+(n/sigma2)))
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = lambda_sample), col = "black", add = T)
# true posterior
curve(dnbinom(x, size = 4, prob = 1/(1+2)), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = lambda_sample), col = "black", add = T)
# true posterior
curve(dnbinom(x, size = 4, prob = 1/(1+2)), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 15), col = "black", add = T)
# true posterior
curve(dnbinom(x, size = 4, prob = 1/(1+2)), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
y <- rpois(n = 15,lambda = 1))
#generate some data
set.seed(123)
y <- rpois(n = 15,lambda = 1)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 15), col = "black", add = T)
# true posterior
curve(dnbinom(x, size = 4, prob = 1/(1+2)), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
y <- rpois(n = 15, lambda = 1)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 15), col = "black", add = T)
# true posterior
curve(dnbinom(x, size = sum(y)+4, prob = 15+2), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
y <- rpois(n = 15, lambda = 1)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 15), col = "black", add = T)
# true posterior
curve(dgamma(x, sum(y)+4, 15+2), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
y <- rpois(n = 15, lambda = 1)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 1), col = "black", add = T)
# true posterior
curve(dgamma(x, sum(y)+4, 15+2), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
y <- rpois(n = 15, lambda = 1)
# gamma prior
curve(dgamma(x, 4, 2), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda = 1), col = "black", add = T)
# true posterior
curve(dgamma(x, sum(y)+4, 15+2), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda = 1
y <- rpois(n, lambda)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda), col = "black", add = T)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda_sample), col = "black", add = T)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue", "grey" ), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda_sample), col = "black", add = T)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue", "grey" ), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
# likelihood
curve(dpois(x, lambda_sample), col = "black", add = T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
curve(dpois(x, lambda_sample), col = "black", add = T)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue", "grey" ), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
y
# likelihood
logLik(y)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
# curve(dpois(x, lambda_sample), col = "black", add = T)
likelihood = exp(-n * lambda_sample) * lambda_sample^{sum(y)} / prod(factorial(y))
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue"), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
likelihood = exp(-n * lambda_sample) * lambda_sample^{sum(y)} / prod(factorial(y))
hist(likelihood)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue"), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
likelihood = exp(-n * lambda_sample) * lambda_sample^{sum(y)} / prod(factorial(y))
hist(likelihood)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue"), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
# likelihood
likelihood = exp(-n * lambda_sample) * lambda_sample^{sum(y)} / prod(factorial(y))
# hist(likelihood)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue"), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
legend(8.5, 0.7, c("Prior", "Likelihood", "Posterior"),
c("red", "black", "blue"), lty=c(1,2,1),lwd=c(1,1,2), cex=1)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), ylim=c(0,1) col="red", lty=1,lwd=2)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,15), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-4,10), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(cache = TRUE)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2, ylim=c(0,2))
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2, ylim=c(0,1))
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2, probability = T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2, probability = T)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
#generate some data
set.seed(123)
n = 15
lambda_sample = 1
y <- rpois(n, lambda_sample)
# gamma prior
alpha = 4
beta = 2
curve(dgamma(x, alpha, beta), xlim=c(-2,8), col="red", lty=1,lwd=2)
alpha_star = sum(y) + alpha
beta_star = n + beta
# true posterior
curve(dgamma(x, alpha_star, beta_star), xlab=expression(theta), ylab="", col="blue", lwd=2, add=T)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
library(dplyr)
text_df <- data_frame(line = 1:4, text = text)
text_df
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/01_tidytext.R', echo=TRUE)
text_df <- data_frame(line = 1:4, text = Text)
Text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
library(dplyr)
text_df <- data_frame(line = 1:4, text = Text)
text_df
text_df
library(tidytext)
text_df %>%
unnest_tokens(word, text)
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/02_text_mining.R', echo=TRUE)
install.packages("tm.plugin.webmining")
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/02_text_mining.R', echo=TRUE)
install.packages("tm.plugin.webmining")
install.packages("rJava")
install.packages("tm.plugin.webmining")
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/02_text_mining.R', echo=TRUE)
stock_articles <- data_frame(company = company, symbol = symbol) %>%
mutate(corpus = map(symbol, download_articles))
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/07_text_mining/02_jane_austen.R', echo=TRUE)
text_df <- data.frame(line = 1:4, text = text)
text_df
text_df %>%
unnest_tokens(word, text)
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/07_text_mining/02_jane_austen.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/07_text_mining/02_jane_austen.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/data_management_for_big_data/dataManagementForBigData/07_text_mining/02_jane_austen.R', echo=TRUE)
library(tidytext)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text_df <- data.frame(line = 1:4, text = text)
text_df %>%
unnest_tokens(word, text)
library(janeaustenr)
library(dplyr)
library(stringr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
austen_books()
original_books <- austen_books() %>%
group_by(book)
original_books
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
library(jsonlite)
json_data <- stream_in(file("../dataset/Automotive_5.json",open="r"))
library(jsonlite)
json_data <- stream_in(file("../dataset/Automotive_5.json",open="r"))
getwd()
setwd(/home/ginevracoal/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source)
setwd("/home/ginevracoal/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source")
library(jsonlite)
json_data <- stream_in(file("../dataset/Automotive_5.json",open="r"))
str(json_data)
df <- data.frame(matrix(unlist(json_data), byrow=T))
str(df)
length(df[1])
nrow(df[1])
nrow(df)
head(df)
str(json_data)
df <- data.frame(matrix(unlist(json_data), byrow=F))
nrow(df)
head(df)
#set right environment, run only once!
oldwd <- getwd()
setwd("/home/ginevracoal/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/input_readme")
#from here rerun how much you want
set.seed(1)
library(ReadMe)
library(rjson)
json_file <- "../dataset/Automotive_5.json"
json_data <- rjson::fromJSON(file=json_file,simplify = FALSE,method = "R")
library("jsonlite")
json_data = stream_in(file("../dataset/Automotive_5.json",open="r"))
library(tidyverse)
reviews=json_data %>%
select(reviewText,overall,reviewTime) %>%
add_column(SentenceId=1:length(json_data$reviewText))
n <- 500
#n = length(json_data$reviewerID)
# create text files with proper filenames (numbers)
unlink("../input_readme/*")
data=reviews
# create control file with same naming conventions as rotten tomatoes
training_perc=0.5
data1 <- data[1:n,] %>%
rename(Sentiment=overall)%>%
select(SentenceId, Sentiment) %>%
rename(filename = SentenceId) %>%
rename(truth = Sentiment) %>%
add_column(trainingset = rbinom(n, 1, training_perc))
head(data1)
write.csv(data1, file = "../input_readme/control.txt", row.names = FALSE)
output <- undergrad(sep = ',')
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
head(reviews[1:n,])
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
source('~/MEGA/Università/DSSC/semester_2/statistical_methods_for_data_science/statMethodsProject/source/json_doma.R', echo=TRUE)
